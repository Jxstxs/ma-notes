@document.meta
title: Rechenarchitektur
description: 
authors: julius
categories: 
created: 2023-01-25
updated: 2023-01-25
version: 1.0.0
@end


* Von Neuman Prinzp
** Computer beinhaltet
   - ALU (Arithmetic Logic Unit)
   - Steuer/Leitwerk (Control Unit)
   - Speicherwerk
   - Verbindungssystem (BUS - Binary Unit System)
   - Ein/Ausgabewerk

   Rechner ist universell Einsetzbar
   Speicher beinhaltet Daten und Programme
   Programm ist folge von Befehlen

   Aufbau ermöglicht selbst Beschreibung und Löschung
   Problem: *SISD* (Single Instruction Single Data)
** Zyklus
   - Fetch: Befehl laden
   - Decode: zu Schaltinstruktion übersetzt
   - Fetch operants: Daten laden
   - Execute: Ausführung
   - Update Instruction Pointer: setzt IP (schon während Decode und Fe.O) => Execute kann IP verändern
** Mängel
   - keine physische Trennung von Programm und Datenspeicher
   -- semantische Lücken => Beide Speicher werden gleich gesehen und beschrieben
   - Flaschenhals: Ausführung nur skalarer Operationen => Schritt für Schritt
* Rechenarchitektur nach Flynn
** Klassifizierung
   - SI: Single Instruction
   - SD: Single Data
   - MI: Multi Instruction
   - MD: Multi Data
   -- SIMD: Vektorrechner => Array Prozessor
   -- MISD: Schachcomputer => Datenpipelines (massive Parallelisierung)
   -- MIMD: Multi core CPU meistens
* Havard Architektur
** Bestandteile
   - Ein/Ausgabewerk
   - Daten/Befehlsspeicher
   - Rechenwerk
   - Steuerwerk
* Steuerwerke
** Prozessor
*** Bestandteile
    - Steuerwerk
    -- Taktgeber
    -- Statusregister
    -- Befehlskodierer
    -- Befehlsregister
    -- Operationssteuerung
    -- Befehlszähler
    - Rechenwerk
    -- Register => Operanten und Ergebnisse
    -- Akkumulator
    -- ALU
    - Memory Management Unit (MMU)
*** Verarbeitungs Schema
    - Befehlszähler erhält nächste Adresse
    - Decodierung und laden der Daten
    - nächste Adresse
*** Extra
    - ALU
    -- Akku (Speicher)
    -- Flags (Ereignisspeicher)
    - Akku
    -- Register
    -- Befehlszähler
    - Grundbefehlsarten
    -- Lesen
    -- Verknüpfen
    -- Schreiben
** Mikroprozessor
   Prozessor welcher auf einen einzigen Schaltkreis untergebracht ist
** Controller
   Steuern Vorgänge
*** Mikrocontroller
    übernimmt Steueraufgaben => wird als vollständiger Computer angesehen
    nach Havard-Architektur Aufgebaut
** Unterschiede
*** Prozessor
    - Datenverarbeitung
    - hohe Datendichte => breiter Datenbus
*** Controller
    - Einzelbit Verarbeitung
    - hohe IO-Kapazität
* Instruction sets
** RISC: Reduced Instruction Set Computer
** CISC: Complex Instruction Set Computer
** Opcode: Länge an Bits die für befehle zur Verfügung stehen
